La evaluación de la arquitectura reveló que la plataforma actualmente se basa en una arquitectura contenedorizada utilizando Docker 
para desplegar las APIs. Además, el front-end se compone de código HTML junto con CSS y Tailwind CSS para el diseño y estilo. 
Para la lógica del lado del cliente, se emplea JavaScript, mientras que MySQL se utiliza como sistema de gestión de bases de datos 
para almacenar y manejar las consultas. Aunque la plataforma cumple con un rendimiento correcto y aceptable en términos de f
uncionalidades y tiempos de respuesta, mientras que en terminos de seguridad no estamos del todo seguros respecto a su validez.
Hicimos todas las correcciones necesarias después de las pruebas. Para arreglar las fallas, nos metimos directamente en el código 
y, en su mayoría, bastó con cambiar una línea para resolver los problemas. Pero con el ID 2, tuvimos que hacer cambios más profundos.
Tuvimos que ajustar tanto el diseño como el funcionamiento para hacer algunos campos obligatorios y asegurarnos de que se notara. 
También pusimos límites en algunos valores para evitar errores. Con estas mejoras, buscamos que la plataforma sea más fácil de usar 
y que los datos estén más protegidos. La mayoria de errores fueron malos codigos de error a la hora de crearlos por primera vez. 
Gracias al testing pudimos saber cuales eran los errores correctos que debiesen de haber ido en un principio.
